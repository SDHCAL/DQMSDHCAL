  /// \file DQMTriventModule.h
/*
 *
 * DQMTriventModule.h header template automatically generated by a class generator
 * Creation date : mar. mars 8 2016
 *
 * This file is part of DQMSDHCAL libraries.
 * 
 * DQMSDHCAL is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQMSDHCAL is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQMSDHCAL.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMSDHCAL_DQMTRIVENTMODULE_H
#define DQMSDHCAL_DQMTRIVENTMODULE_H

#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/DQMAnalysisModule.h"
#include "dqm4hep/DQMDataConverter.h"

// -- trivent headers
#include "Trivent.h"
#include "LCTrivent.h"
#include "TriventListener.h"

namespace EVENT { class LCCollection; }

namespace dqm_sdhcal
{

/** DQMTriventModule class
 */ 
class DQMTriventModule : public dqm4hep::DQMAnalysisModule, public trivent::LCTriventListener
{
public:
	/** Constructor
	 */
	DQMTriventModule();

	/** Destructor
	 */
	virtual ~DQMTriventModule();

protected:
	virtual dqm4hep::StatusCode userInitModule() = 0;
	virtual dqm4hep::StatusCode userReadSettings(const dqm4hep::TiXmlHandle xmlHandle) = 0;
	virtual dqm4hep::StatusCode processEvent(EVENT::LCEvent *pLCEvent) = 0;

private:
	// from analysis module
	dqm4hep::StatusCode initModule();
	dqm4hep::StatusCode readSettings(const dqm4hep::TiXmlHandle xmlHandle);
	dqm4hep::StatusCode processEvent(dqm4hep::DQMEvent *const pEvent);
	void processReconstructedEvent(EVENT::LCEvent *pLCEvent);    // from trivent
	dqm4hep::StatusCode convertEvent(EVENT::LCEvent *pLCEvent, trivent::Event &event);
	dqm4hep::StatusCode performOutputDataConversion(EVENT::LCEvent *pLCEvent);

private:
	typedef dqm4hep::DQMDataConverter<EVENT::LCCollection, EVENT::LCCollection> CaloHitCollectionConverter;

	trivent::Trivent                          *m_pTrivent;
	trivent::Trivent::Parameters               m_triventParameters;
	dqm4hep::StringVector                      m_rawCollectionNames;
	dqm4hep::StringVector                      m_recCollectionNames;
	dqm4hep::StringVector                      m_rawDataConverterNames;
	std::vector< CaloHitCollectionConverter *> m_dataConverters;
}; 

} 

#endif  //  DQMSDHCAL_DQMTRIVENTMODULE_H
